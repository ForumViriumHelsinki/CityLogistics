# Generated by Django 3.1 on 2020-08-27 10:08
import csv
import re, requests

from django.conf import settings
from django.db import migrations
from pyproj import Transformer

transformer = Transformer.from_crs('epsg:3067', 'epsg:4326')


def sync_street_address(self):
    self.street_address = f'{self.street} {self.housenumber} {self.unit or ""}'.strip()


def forwards(apps, schema_editor):
    if settings.TEST:
        return
    Address = apps.get_model('fvh_courier', 'Address')

    print('Loading address data...')
    response = requests.get('https://www.avoindata.fi/data/dataset/cf9208dc-63a9-44a2-9312-bbd2c3952596/resource/986fbcd8-589f-460c-81a3-5efb8ab4b880/download/02_osoitteet_2020-08-14.opt')
    print('Finished loading.')
    content = response.content.decode('iso8859-15')
    address_lines = csv.reader(content.splitlines(), delimiter=';')
    addresses_out = []
    for line in address_lines:
        n = line[4]
        e = line[5]
        street = line[7]
        housenumber = line[9]
        if not (street and housenumber):
            continue
        if re.fullmatch(r'\d+-\d+', housenumber):
            parts = housenumber.split('-')
            nrs = list(range(int(parts[0]), int(parts[1]) + 1, 2))
        else:
            nrs = [housenumber]
        coord = transformer.transform(e, n)
        for nr in nrs:
            props = {
                "street": street,
                "housenumber": str(nr),
                "country": 'Finland',
                "official": True,
                "lat": coord[0],
                "lon": coord[1]
            }
            addresses_out.append(Address(**props))
    Address.objects.bulk_create(addresses_out)


class Migration(migrations.Migration):

    dependencies = [
        ('fvh_courier', '0043_import_helsinki_addresses'),
    ]

    operations = [
        migrations.RunPython(forwards, lambda apps, schema_editor: None)
    ]
